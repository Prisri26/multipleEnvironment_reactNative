name: React Native CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '17'
  ANDROID_HOME: /usr/local/lib/android/sdk
  ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
  ANDROID_NDK_HOME: /usr/local/lib/android/sdk/ndk/25.1.8937393
  ANDROID_NDK_ROOT: /usr/local/lib/android/sdk/ndk/25.1.8937393

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci
          npm audit fix || true
          npm audit || true
        
      - name: Run linting
        run: npm run lint
        
      - name: Run tests
        run: npm test
        if: false # Enable this when you add tests

  build-android:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [development, qa, staging, production]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
          
      - name: Install dependencies
        run: |
          npm ci
          npm audit fix || true
          npm audit || true

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Build Android
        run: |
          cd android
          ./gradlew clean
          if [ "${{ matrix.environment }}" = "development" ]; then
            ./gradlew assembleDebug -Penv=development -PdisablePreDex
          elif [ "${{ matrix.environment }}" = "qa" ]; then
            ./gradlew assembleDebug -Penv=qa -PdisablePreDex
          elif [ "${{ matrix.environment }}" = "staging" ]; then
            ./gradlew assembleDebug -Penv=staging -PdisablePreDex
          else
            ./gradlew assembleDebug -Penv=production -PdisablePreDex
          fi
        env:
          EXPO_PUBLIC_ENV: ${{ matrix.environment }}
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
          ANDROID_NDK_HOME: ${{ env.ANDROID_NDK_HOME }}
          ANDROID_NDK_ROOT: ${{ env.ANDROID_NDK_ROOT }}
          JAVA_HOME: ${{ env.JAVA_HOME }}
          GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"

      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-${{ matrix.environment }}-apk
          path: android/app/build/outputs/apk/${{ matrix.environment }}/debug/app-${{ matrix.environment }}-debug.apk
          if-no-files-found: error

  build-ios:
    needs: test
    runs-on: macos-latest
    strategy:
      matrix:
        environment: [development, qa, staging, production]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci
          npm audit fix || true
          npm audit || true

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods
          cd ios
          pod install --repo-update

      - name: List Xcode Schemes
        run: |
          cd ios
          xcodebuild -list -workspace baseProjectMultiple.xcworkspace
        
      - name: Build iOS
        run: |
          if [ "${{ matrix.environment }}" = "development" ]; then
            npx expo run:ios --scheme baseProjectMultiple
          elif [ "${{ matrix.environment }}" = "qa" ]; then
            npx expo run:ios --scheme baseProjectMultiple
          elif [ "${{ matrix.environment }}" = "staging" ]; then
            npx expo run:ios --scheme baseProjectMultiple
          else
            npx expo run:ios --scheme baseProjectMultiple
          fi
        env:
          EXPO_PUBLIC_ENV: ${{ matrix.environment }}

      - name: Upload iOS IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios-${{ matrix.environment }}-ipa
          path: ios/build/BaseProjectMultiple-${{ matrix.environment }}.ipa
          if-no-files-found: error 